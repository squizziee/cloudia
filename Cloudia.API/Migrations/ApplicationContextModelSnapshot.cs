// <auto-generated />
using System;
using Cloudia.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Cloudia.API.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Cloudia.API.Entities.BanStatus", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("ban_end_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.ToTable("BanStatuses");
                });

            modelBuilder.Entity("Cloudia.API.Entities.Comment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("post_id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("posted_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("text_content")
                        .HasColumnType("text");

                    b.Property<int>("user_profile_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Cloudia.API.Entities.Like", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("post_id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("posted_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("user_profile_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("Cloudia.API.Entities.Post", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("posted_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("text_content")
                        .HasColumnType("text");

                    b.Property<int>("user_profile_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Cloudia.API.Entities.PostAttachment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("post_id")
                        .HasColumnType("integer");

                    b.Property<int>("source_url")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("PostAttachments");
                });

            modelBuilder.Entity("Cloudia.API.Entities.Report", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("post_id")
                        .HasColumnType("integer");

                    b.Property<int>("receiver_id")
                        .HasColumnType("integer");

                    b.Property<int>("sender_id")
                        .HasColumnType("integer");

                    b.Property<int>("violation_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("Cloudia.API.Entities.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("password_hash")
                        .HasColumnType("text");

                    b.Property<int>("role_id")
                        .HasColumnType("integer");

                    b.Property<int>("user_profile_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Cloudia.API.Entities.UserProfile", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("age")
                        .HasColumnType("integer");

                    b.Property<string>("avatar_url")
                        .HasColumnType("text");

                    b.Property<int>("ban_status_id")
                        .HasColumnType("integer");

                    b.Property<string>("biography")
                        .HasColumnType("text");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("first_name")
                        .HasColumnType("text");

                    b.Property<string>("last_name")
                        .HasColumnType("text");

                    b.Property<string>("location")
                        .HasColumnType("text");

                    b.Property<int>("role_id")
                        .HasColumnType("integer");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("Cloudia.API.Entities.Violation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("ban_days")
                        .HasColumnType("integer");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Violations");
                });
#pragma warning restore 612, 618
        }
    }
}
